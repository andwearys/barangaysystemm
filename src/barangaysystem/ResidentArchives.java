/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package barangaysystem;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Admin
 */
public class ResidentArchives extends javax.swing.JFrame {
Connection conn = null;
PreparedStatement pst = null;
ResultSet rs = null;
Object[] cols = null;
    /**
     * Creates new form Archives
     */
    public ResidentArchives() {
        initComponents();
        lblSelectedRowResidentID.setVisible(false);
        lblUsername.setVisible(false);
        lblUserID.setVisible(false);
        lblUserType.setVisible(false);
        rcmdByID.setOpaque(false);
        rcmdByName.setOpaque(false);
        showDate();
        showTime();
        UsersTable();
    }
void showDate() {
        Date d = new Date();
        SimpleDateFormat s = new SimpleDateFormat("MM/dd/yyyy");
        lblDate.setText("Date: " + s.format(d));
    }

    void showTime() {
        new Timer(0, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
            Date d = new Date();
        SimpleDateFormat s = new SimpleDateFormat("hh:mm:ss a");
        lblTime.setText("Time: " + s.format(d));
            }
            
        }
        ).start();
    }
    
    void UsersTable(){
        conn=MySqlConnect.ConnectDB();
        String sql = "SELECT `ResidentID`, `fname`, `mname`, `lname`, `dob`, `gender`, `registeredvoter` FROM `residents` WHERE `archive`='Yes'";
        try{
            pst=conn.prepareStatement(sql);
            rs=pst.executeQuery();
            tblResidents.setModel(DbUtils.resultSetToTableModel(rs)); 
            cols = new String[]{"Resident ID","First Name","Middle Name","Last Name","Date of Birth","Gender","Voter"};
            DefaultTableModel model = (DefaultTableModel) tblResidents.getModel();
            model.setColumnIdentifiers(cols);
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    }
    void report(){
        Connection con=null;
        con=SqlConnectReports.ConnectDB();
        String report = "INSERT INTO `audittrail`(`Date`, `Time`, `User Name`, `Action Performed`, `Resident ID`, `AuditTrailType`) VALUES (?,?,?,?,?,?)";
            Date d = new Date();        
            SimpleDateFormat s = new SimpleDateFormat("yyyy-MM-dd");
            SimpleDateFormat c = new SimpleDateFormat("hh:mm:ss");
            String date = (s.format(d));
            String time = (c.format(d));
    try{
            pst=con.prepareStatement(report);
            pst.setString(1, date);
            pst.setString(2, time);
            pst.setString(3, lblLoginAs.getText());
            pst.setString(4, "RESTORED ARCHIVE");
            pst.setString(5, lblSelectedRowResidentID.getText());
            pst.setString(6, "Resident");
            pst.executeUpdate();
    }catch(Exception e){
    JOptionPane.showMessageDialog(null, e);
    }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lblBack = new javax.swing.JLabel();
        lblBackHover = new javax.swing.JLabel();
        lblUserID = new javax.swing.JLabel();
        lblUsername = new javax.swing.JLabel();
        lblUserType = new javax.swing.JLabel();
        lblDate = new javax.swing.JLabel();
        lblTime = new javax.swing.JLabel();
        cmdRestoreArchive = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblAddress = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblFather = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblResidents = new javax.swing.JTable();
        lblTotalResult = new javax.swing.JLabel();
        lblTotal = new javax.swing.JLabel();
        lblSelectedRowResidentID = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tblMother = new javax.swing.JTable();
        lblSearch = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        rcmdByID = new javax.swing.JRadioButton();
        rcmdByName = new javax.swing.JRadioButton();
        lblLoginAs1 = new javax.swing.JLabel();
        lblLoginAs = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Barangay Records System: Archive");
        setResizable(false);

        jPanel1.setLayout(null);

        jPanel6.setBackground(new java.awt.Color(102, 153, 255));
        jPanel6.setLayout(null);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("FATHER");
        jPanel6.add(jLabel5);
        jLabel5.setBounds(110, 0, 80, 20);

        jPanel1.add(jPanel6);
        jPanel6.setBounds(670, 190, 310, 20);

        jPanel5.setBackground(new java.awt.Color(255, 51, 153));
        jPanel5.setLayout(null);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("MOTHER");
        jPanel5.add(jLabel4);
        jLabel4.setBounds(110, 0, 80, 20);

        jPanel1.add(jPanel5);
        jPanel5.setBounds(670, 270, 310, 20);

        jPanel4.setBackground(new java.awt.Color(153, 153, 255));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("ADDRESS");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(108, 108, 108)
                .addComponent(jLabel3)
                .addContainerGap(116, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel1.add(jPanel4);
        jPanel4.setBounds(670, 360, 310, 30);

        jPanel3.setBackground(new java.awt.Color(255, 204, 0));
        jPanel3.setLayout(null);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("FAMILY BACKGROUND");
        jPanel3.add(jLabel2);
        jLabel2.setBounds(50, 0, 210, 30);

        jPanel1.add(jPanel3);
        jPanel3.setBounds(670, 150, 310, 30);

        jPanel2.setBackground(new java.awt.Color(255, 140, 0));
        jPanel2.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("PERSONAL INFORMATION");
        jPanel2.add(jLabel1);
        jLabel1.setBounds(230, 0, 246, 30);

        jPanel1.add(jPanel2);
        jPanel2.setBounds(20, 150, 640, 30);

        lblBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/barangaysystem/image/BackButtonSmall.png"))); // NOI18N
        lblBack.setToolTipText("Back to Main Menu");
        lblBack.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblBackMouseEntered(evt);
            }
        });
        jPanel1.add(lblBack);
        lblBack.setBounds(20, 0, 50, 50);

        lblBackHover.setIcon(new javax.swing.ImageIcon(getClass().getResource("/barangaysystem/image/BackButtonHoverSmall.png"))); // NOI18N
        lblBackHover.setToolTipText("Back");
        lblBackHover.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblBackHoverMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblBackHoverMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblBackHoverMouseExited(evt);
            }
        });
        jPanel1.add(lblBackHover);
        lblBackHover.setBounds(20, 0, 40, 50);

        lblUserID.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblUserID.setForeground(new java.awt.Color(255, 255, 255));
        lblUserID.setText("UserID");
        jPanel1.add(lblUserID);
        lblUserID.setBounds(260, 20, 70, 15);

        lblUsername.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblUsername.setForeground(new java.awt.Color(255, 255, 255));
        lblUsername.setText("Username");
        jPanel1.add(lblUsername);
        lblUsername.setBounds(320, 20, 70, 15);

        lblUserType.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblUserType.setForeground(new java.awt.Color(255, 255, 255));
        lblUserType.setText("UserType");
        lblUserType.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                lblUserTypePropertyChange(evt);
            }
        });
        jPanel1.add(lblUserType);
        lblUserType.setBounds(390, 20, 70, 15);

        lblDate.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblDate.setForeground(new java.awt.Color(255, 255, 255));
        lblDate.setText("Date");
        jPanel1.add(lblDate);
        lblDate.setBounds(700, 30, 130, 20);

        lblTime.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblTime.setForeground(new java.awt.Color(255, 255, 255));
        lblTime.setText("Time");
        jPanel1.add(lblTime);
        lblTime.setBounds(850, 30, 150, 20);

        cmdRestoreArchive.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        cmdRestoreArchive.setText("RESTORE");
        cmdRestoreArchive.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdRestoreArchiveActionPerformed(evt);
            }
        });
        jPanel1.add(cmdRestoreArchive);
        cmdRestoreArchive.setBounds(20, 520, 240, 50);

        tblAddress.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        tblAddress.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblAddress.setToolTipText("List of All Users");
        tblAddress.setRowHeight(30);
        tblAddress.setSelectionBackground(new java.awt.Color(255, 51, 51));
        tblAddress.addHierarchyListener(new java.awt.event.HierarchyListener() {
            public void hierarchyChanged(java.awt.event.HierarchyEvent evt) {
                tblAddressHierarchyChanged(evt);
            }
        });
        tblAddress.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tblAddressFocusGained(evt);
            }
        });
        tblAddress.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblAddressMouseClicked(evt);
            }
        });
        tblAddress.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
                tblAddressCaretPositionChanged(evt);
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
            }
        });
        tblAddress.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                tblAddressPropertyChange(evt);
            }
        });
        tblAddress.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tblAddressKeyReleased(evt);
            }
        });
        tblAddress.addVetoableChangeListener(new java.beans.VetoableChangeListener() {
            public void vetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {
                tblAddressVetoableChange(evt);
            }
        });
        jScrollPane4.setViewportView(tblAddress);

        jPanel1.add(jScrollPane4);
        jScrollPane4.setBounds(670, 390, 310, 60);

        tblFather.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        tblFather.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblFather.setToolTipText("Archive Family Background");
        tblFather.setRowHeight(30);
        tblFather.setSelectionBackground(new java.awt.Color(255, 51, 51));
        tblFather.addHierarchyListener(new java.awt.event.HierarchyListener() {
            public void hierarchyChanged(java.awt.event.HierarchyEvent evt) {
                tblFatherHierarchyChanged(evt);
            }
        });
        tblFather.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tblFatherFocusGained(evt);
            }
        });
        tblFather.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblFatherMouseClicked(evt);
            }
        });
        tblFather.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
                tblFatherCaretPositionChanged(evt);
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
            }
        });
        tblFather.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                tblFatherPropertyChange(evt);
            }
        });
        tblFather.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tblFatherKeyReleased(evt);
            }
        });
        tblFather.addVetoableChangeListener(new java.beans.VetoableChangeListener() {
            public void vetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {
                tblFatherVetoableChange(evt);
            }
        });
        jScrollPane3.setViewportView(tblFather);

        jPanel1.add(jScrollPane3);
        jScrollPane3.setBounds(670, 210, 310, 60);

        tblResidents.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        tblResidents.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblResidents.setToolTipText("Archive Personal Information");
        tblResidents.setRowHeight(25);
        tblResidents.setSelectionBackground(new java.awt.Color(255, 51, 51));
        tblResidents.addHierarchyListener(new java.awt.event.HierarchyListener() {
            public void hierarchyChanged(java.awt.event.HierarchyEvent evt) {
                tblResidentsHierarchyChanged(evt);
            }
        });
        tblResidents.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tblResidentsFocusGained(evt);
            }
        });
        tblResidents.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblResidentsMouseClicked(evt);
            }
        });
        tblResidents.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
                tblResidentsCaretPositionChanged(evt);
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
            }
        });
        tblResidents.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                tblResidentsPropertyChange(evt);
            }
        });
        tblResidents.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tblResidentsKeyReleased(evt);
            }
        });
        tblResidents.addVetoableChangeListener(new java.beans.VetoableChangeListener() {
            public void vetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {
                tblResidentsVetoableChange(evt);
            }
        });
        jScrollPane2.setViewportView(tblResidents);

        jPanel1.add(jScrollPane2);
        jScrollPane2.setBounds(20, 180, 640, 270);

        lblTotalResult.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblTotalResult.setText("Total:");
        jPanel1.add(lblTotalResult);
        lblTotalResult.setBounds(20, 90, 54, 40);

        lblTotal.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblTotal.setText("0");
        jPanel1.add(lblTotal);
        lblTotal.setBounds(80, 90, 110, 40);

        lblSelectedRowResidentID.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblSelectedRowResidentID.setForeground(new java.awt.Color(255, 255, 255));
        lblSelectedRowResidentID.setText("SelectedResidentID");
        lblSelectedRowResidentID.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                lblSelectedRowResidentIDPropertyChange(evt);
            }
        });
        jPanel1.add(lblSelectedRowResidentID);
        lblSelectedRowResidentID.setBounds(470, 20, 119, 15);

        tblMother.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        tblMother.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblMother.setToolTipText("Archive Family Background");
        tblMother.setRowHeight(30);
        tblMother.setSelectionBackground(new java.awt.Color(255, 51, 51));
        tblMother.addHierarchyListener(new java.awt.event.HierarchyListener() {
            public void hierarchyChanged(java.awt.event.HierarchyEvent evt) {
                tblMotherHierarchyChanged(evt);
            }
        });
        tblMother.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tblMotherFocusGained(evt);
            }
        });
        tblMother.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblMotherMouseClicked(evt);
            }
        });
        tblMother.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
                tblMotherCaretPositionChanged(evt);
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
            }
        });
        tblMother.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                tblMotherPropertyChange(evt);
            }
        });
        tblMother.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tblMotherKeyReleased(evt);
            }
        });
        tblMother.addVetoableChangeListener(new java.beans.VetoableChangeListener() {
            public void vetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {
                tblMotherVetoableChange(evt);
            }
        });
        jScrollPane5.setViewportView(tblMother);

        jPanel1.add(jScrollPane5);
        jScrollPane5.setBounds(670, 290, 310, 60);

        lblSearch.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblSearch.setForeground(new java.awt.Color(51, 51, 51));
        lblSearch.setText("Search: ");
        jPanel1.add(lblSearch);
        lblSearch.setBounds(200, 90, 60, 50);

        txtSearch.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtSearch.setToolTipText("Search Residents");
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
        });
        jPanel1.add(txtSearch);
        txtSearch.setBounds(260, 100, 310, 30);

        rcmdByID.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        rcmdByID.setSelected(true);
        rcmdByID.setText("By ID");
        rcmdByID.setToolTipText("Search Residents by ID");
        rcmdByID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rcmdByIDActionPerformed(evt);
            }
        });
        jPanel1.add(rcmdByID);
        rcmdByID.setBounds(570, 90, 90, 30);

        rcmdByName.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        rcmdByName.setText("By Name");
        rcmdByName.setToolTipText("Search Residents by Name");
        rcmdByName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rcmdByNameActionPerformed(evt);
            }
        });
        jPanel1.add(rcmdByName);
        rcmdByName.setBounds(570, 110, 90, 30);

        lblLoginAs1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblLoginAs1.setForeground(new java.awt.Color(255, 255, 255));
        lblLoginAs1.setText("Login:");
        jPanel1.add(lblLoginAs1);
        lblLoginAs1.setBounds(700, 10, 50, 20);

        lblLoginAs.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblLoginAs.setForeground(new java.awt.Color(255, 255, 255));
        lblLoginAs.setText("Name");
        jPanel1.add(lblLoginAs);
        lblLoginAs.setBounds(750, 10, 250, 20);

        jPanel7.setBackground(new java.awt.Color(0, 51, 153));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Trash");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(111, 111, 111)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(799, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel1.add(jPanel7);
        jPanel7.setBounds(0, 0, 1000, 50);

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/barangaysystem/image/bg1k.png"))); // NOI18N
        jLabel7.setText("jLabel7");
        jPanel1.add(jLabel7);
        jLabel7.setBounds(0, 0, 1000, 650);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1000, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 650, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void lblUserTypePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_lblUserTypePropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_lblUserTypePropertyChange

    private void lblBackMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblBackMouseEntered
        // TODO add your handling code here:
        lblBack.setVisible(false);
    }//GEN-LAST:event_lblBackMouseEntered

    private void lblBackHoverMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblBackHoverMouseClicked
        // TODO add your handling code here:
        String LoginAs = lblLoginAs.getText();
        String UserID = lblUserID.getText();
        String Username = lblUsername.getText();
        String userType = lblUserType.getText();
        Residents ob = new Residents();
        ob.lblLoginAs.setText(LoginAs);
        ob.lblUserID.setText(UserID);
        ob.lblUsername.setText(Username);
        ob.lblUserType.setText(userType);
        ob.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_lblBackHoverMouseClicked

    private void lblBackHoverMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblBackHoverMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_lblBackHoverMouseEntered

    private void lblBackHoverMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblBackHoverMouseExited
        // TODO add your handling code here:
        lblBack.setVisible(true);
    }//GEN-LAST:event_lblBackHoverMouseExited

    private void tblResidentsHierarchyChanged(java.awt.event.HierarchyEvent evt) {//GEN-FIRST:event_tblResidentsHierarchyChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_tblResidentsHierarchyChanged

    private void tblResidentsFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tblResidentsFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_tblResidentsFocusGained

    private void tblResidentsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblResidentsMouseClicked
        // TODO add your handling code here:
        int column = 0;
        int row = tblResidents.getSelectedRow();
        String value = tblResidents.getModel().getValueAt(row, column).toString();
        lblSelectedRowResidentID.setText(value);
        //  DefaultTableModel model = (DefaultTableModel) tblUsers.getModel();
        //  int i=tblUsers.getSelectedRow();
        //  txtResult.setText((String)model.getValueAt(i, 0));
    }//GEN-LAST:event_tblResidentsMouseClicked

    private void tblResidentsCaretPositionChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_tblResidentsCaretPositionChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_tblResidentsCaretPositionChanged

    private void tblResidentsPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_tblResidentsPropertyChange
        // TODO add your handling code here:
        int rowCount = tblResidents.getRowCount();
        String totalRows = String.valueOf(rowCount);
        lblTotal.setText(totalRows);
    }//GEN-LAST:event_tblResidentsPropertyChange

    private void tblResidentsKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblResidentsKeyReleased
        // TODO add your handling code here:
        int column = 0;
        int row = tblResidents.getSelectedRow();
        String value = tblResidents.getModel().getValueAt(row, column).toString();
        lblSelectedRowResidentID.setText(value);
        //lblSelectedRowUserID.setText(value);
    }//GEN-LAST:event_tblResidentsKeyReleased

    private void tblResidentsVetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {//GEN-FIRST:event_tblResidentsVetoableChange
        // TODO add your handling code here:
    }//GEN-LAST:event_tblResidentsVetoableChange

    private void tblFatherHierarchyChanged(java.awt.event.HierarchyEvent evt) {//GEN-FIRST:event_tblFatherHierarchyChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_tblFatherHierarchyChanged

    private void tblFatherFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tblFatherFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_tblFatherFocusGained

    private void tblFatherMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblFatherMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tblFatherMouseClicked

    private void tblFatherCaretPositionChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_tblFatherCaretPositionChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_tblFatherCaretPositionChanged

    private void tblFatherPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_tblFatherPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_tblFatherPropertyChange

    private void tblFatherKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblFatherKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_tblFatherKeyReleased

    private void tblFatherVetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {//GEN-FIRST:event_tblFatherVetoableChange
        // TODO add your handling code here:
    }//GEN-LAST:event_tblFatherVetoableChange

    private void tblAddressHierarchyChanged(java.awt.event.HierarchyEvent evt) {//GEN-FIRST:event_tblAddressHierarchyChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_tblAddressHierarchyChanged

    private void tblAddressFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tblAddressFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_tblAddressFocusGained

    private void tblAddressMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblAddressMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tblAddressMouseClicked

    private void tblAddressCaretPositionChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_tblAddressCaretPositionChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_tblAddressCaretPositionChanged

    private void tblAddressPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_tblAddressPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_tblAddressPropertyChange

    private void tblAddressKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblAddressKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_tblAddressKeyReleased

    private void tblAddressVetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {//GEN-FIRST:event_tblAddressVetoableChange
        // TODO add your handling code here:
    }//GEN-LAST:event_tblAddressVetoableChange

    private void cmdRestoreArchiveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdRestoreArchiveActionPerformed
int row = tblResidents.getSelectedRow();
        if(tblResidents.isRowSelected(row)==true){
        int selectedOption = JOptionPane.showConfirmDialog(null, "Are you sure You want Restore this Resident Profile?", "Barangay System",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
        if (selectedOption==JOptionPane.YES_OPTION){
        String updateResidentID = lblSelectedRowResidentID.getText();
        String offArchive="UPDATE `residents` SET `archive`='No' WHERE ResidentID='"+updateResidentID+"'"; 
        Connection conn=MySqlConnect.ConnectDB();
        try{
            pst=conn.prepareStatement(offArchive);
            pst.executeUpdate();
            report();
            String sql = "SELECT `ResidentID`, `fname`, `mname`, `lname`, `dob`, `gender`, `registeredvoter` FROM `residents` WHERE `archive`='Yes'";
        try{
            pst=conn.prepareStatement(sql); 
            rs=pst.executeQuery();
            tblResidents.setModel(DbUtils.resultSetToTableModel(rs)); 
            cols = new String[]{"Resident ID","First Name","Middle Name","Last Name","Date of Birth","Gender","Voter"};
            DefaultTableModel model = (DefaultTableModel) tblResidents.getModel();
            model.setColumnIdentifiers(cols);
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
        conn.close();
        lblSelectedRowResidentID.setText(null);
        JOptionPane.showMessageDialog(null, "Resident Profile Successfully Restore.","Barangay System",JOptionPane.INFORMATION_MESSAGE);
        }catch(Exception e){
        }
        }
        }else{
        JOptionPane.showMessageDialog(null, "Select Resident Profile you want to Restore","Barangay System",JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_cmdRestoreArchiveActionPerformed

    private void lblSelectedRowResidentIDPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_lblSelectedRowResidentIDPropertyChange
        // TODO add your handling code here:
        conn=MySqlConnect.ConnectDB();
        String father = "SELECT `father-fname`, `father-lname`, `father-occupation` FROM `residents` WHERE `ResidentID` = ?";
        String mother = "SELECT `mother-fname`, `mother-lname`, `mother-occupation`  FROM `residents` WHERE `ResidentID`=? ";
        String address = "select addressBlock,addressLot from residents where ResidentID = ? ";
        
        try{
             pst=conn.prepareStatement(father);
            pst.setString(1, lblSelectedRowResidentID.getText());
            rs=pst.executeQuery();
            tblFather.setModel(DbUtils.resultSetToTableModel(rs)); 
            cols = new String[]{"First Name","Middle","Last Name","Occupation"};
            DefaultTableModel modelFather = (DefaultTableModel) tblFather.getModel();
            modelFather.setColumnIdentifiers(cols);
            
            pst=conn.prepareStatement(mother);
            pst.setString(1, lblSelectedRowResidentID.getText());
            rs=pst.executeQuery();
            tblMother.setModel(DbUtils.resultSetToTableModel(rs)); 
            cols = new String[]{"First Name","Middle","Last Name","Occupation"};
            DefaultTableModel modelMother = (DefaultTableModel) tblMother.getModel();
            modelMother.setColumnIdentifiers(cols);
            
            pst=conn.prepareStatement(address);
            pst.setString(1, lblSelectedRowResidentID.getText());
            rs=pst.executeQuery();
            tblAddress.setModel(DbUtils.resultSetToTableModel(rs)); 
            cols = new String[]{"Address Block","Address Lot"};
            DefaultTableModel model1 = (DefaultTableModel) tblAddress.getModel();
            model1.setColumnIdentifiers(cols);
            tblFather.selectAll();
            tblMother.selectAll();
            tblAddress.selectAll();
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
             JOptionPane.showMessageDialog(null, "Error");
        }
    }//GEN-LAST:event_lblSelectedRowResidentIDPropertyChange

    private void tblMotherHierarchyChanged(java.awt.event.HierarchyEvent evt) {//GEN-FIRST:event_tblMotherHierarchyChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_tblMotherHierarchyChanged

    private void tblMotherFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tblMotherFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_tblMotherFocusGained

    private void tblMotherMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblMotherMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tblMotherMouseClicked

    private void tblMotherCaretPositionChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_tblMotherCaretPositionChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_tblMotherCaretPositionChanged

    private void tblMotherPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_tblMotherPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_tblMotherPropertyChange

    private void tblMotherKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblMotherKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_tblMotherKeyReleased

    private void tblMotherVetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {//GEN-FIRST:event_tblMotherVetoableChange
        // TODO add your handling code here:
    }//GEN-LAST:event_tblMotherVetoableChange

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        // TODO add your handling code here:
        if(txtSearch.getText().equals("")){
            conn=MySqlConnect.ConnectDB();
            String sql = "SELECT `ResidentID`, `fname`, `mname`, `lname`, `dob`, `gender`, `registeredvoter` FROM `residents` WHERE `archive`='Yes'";
            try{
                pst=conn.prepareStatement(sql);
                //  pst.setString(1,jTextField1.getText());
                rs=pst.executeQuery();
                tblResidents.setModel(DbUtils.resultSetToTableModel(rs));
                cols = new String[]{"Resident ID","First Name","Middle Name","Last Name","Date of Birth","Gender","Voter"};
                DefaultTableModel model = (DefaultTableModel) tblResidents.getModel();
                model.setColumnIdentifiers(cols);
            }catch(Exception e){
                JOptionPane.showMessageDialog(null, e);
            }
        }else{
            if(rcmdByID.isSelected()==true){
                try{
                    String sql = "SELECT `ResidentID`, `fname`, `mname`, `lname`, `dob`, `gender`, `registeredvoter` FROM `residents` WHERE `archive`='Yes' And ResidentID=? ";
                    pst=conn.prepareStatement(sql);
                    pst.setString(1,txtSearch.getText());
                    rs=pst.executeQuery();
                    tblResidents.setModel(DbUtils.resultSetToTableModel(rs));
                    cols = new String[]{"Resident ID","First Name","Middle Name","Last Name","Date of Birth","Gender","Voter"};
                    DefaultTableModel model = (DefaultTableModel) tblResidents.getModel();
                    model.setColumnIdentifiers(cols);
                }catch(Exception e){
                    JOptionPane.showMessageDialog(null, e);
                }
            }
            else if(rcmdByName.isSelected()==true){
                try{
                    String sql2 = "SELECT `ResidentID`, `fname`, `mname`, `lname`, `dob`, `gender`, `registeredvoter` FROM `residents` WHERE `fname`=? and `archive`='Yes' or `mname`=? and `archive`='Yes' or `lname`=? and `archive`='Yes'";
                    pst=conn.prepareStatement(sql2);
                    pst.setString(1,txtSearch.getText());
                    pst.setString(2,txtSearch.getText());
                    pst.setString(3,txtSearch.getText());
                    rs=pst.executeQuery();
                    tblResidents.setModel(DbUtils.resultSetToTableModel(rs));
                    cols = new String[]{"Resident ID","First Name","Middle Name","Last Name","Date of Birth","Gender","Voter"};
                    DefaultTableModel model = (DefaultTableModel) tblResidents.getModel();
                    model.setColumnIdentifiers(cols);
                }catch(Exception e){
                    JOptionPane.showMessageDialog(null, e);
                }
            }
        }
    }//GEN-LAST:event_txtSearchKeyReleased

    private void rcmdByIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rcmdByIDActionPerformed
        // TODO add your handling code here:
        rcmdByID.setSelected(true);
        if(rcmdByID.isSelected()==true){
            rcmdByName.setSelected(false);
            if(txtSearch.getText().equals("")){
                conn=MySqlConnect.ConnectDB();
                try{
                    String sql = "SELECT `ResidentID`, `fname`, `mname`, `lname`, `dob`, `gender`, `registeredvoter` FROM `residents` WHERE `archive`='Yes'";
                    pst=conn.prepareStatement(sql);
                    rs=pst.executeQuery();
                    tblResidents.setModel(DbUtils.resultSetToTableModel(rs));
                    cols = new String[]{"Resident ID","First Name","Middle Name","Last Name","Date of Birth","Gender","Voter"};
                    DefaultTableModel model = (DefaultTableModel) tblResidents.getModel();
                    model.setColumnIdentifiers(cols);
                }catch(Exception e){
                    JOptionPane.showMessageDialog(null, e);
                }
            }else{
                try{
                    String sql = "SELECT `ResidentID`, `fname`, `mname`, `lname`, `dob`, `gender`, `registeredvoter` FROM `residents` WHERE `archive`='Yes' And ResidentID=? ";
                    pst=conn.prepareStatement(sql);
                    pst.setString(1,txtSearch.getText());
                    rs=pst.executeQuery();
                    tblResidents.setModel(DbUtils.resultSetToTableModel(rs));
                    cols = new String[]{"Resident ID","First Name","Middle Name","Last Name","Date of Birth","Gender","Voter"};
                    DefaultTableModel model = (DefaultTableModel) tblResidents.getModel();
                    model.setColumnIdentifiers(cols);
                }catch(Exception e){
                    JOptionPane.showMessageDialog(null, e);
                }
            }
        }
    }//GEN-LAST:event_rcmdByIDActionPerformed

    private void rcmdByNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rcmdByNameActionPerformed
        // TODO add your handling code here:
        rcmdByName.setSelected(true);
        if(rcmdByName.isSelected()==true){
            rcmdByID.setSelected(false);
            if(txtSearch.getText().equals("")){
                conn=MySqlConnect.ConnectDB();
                try{
                    String sql = "SELECT `ResidentID`, `fname`, `mname`, `lname`, `dob`, `gender`, `registeredvoter` FROM `residents` WHERE `archive`='Yes'";
                    pst=conn.prepareStatement(sql);
                    rs=pst.executeQuery();
                    tblResidents.setModel(DbUtils.resultSetToTableModel(rs));
                    cols = new String[]{"Resident ID","First Name","Middle Name","Last Name","Date of Birth","Gender","Voter"};
                    DefaultTableModel model = (DefaultTableModel) tblResidents.getModel();
                    model.setColumnIdentifiers(cols);
                }catch(Exception e){
                    JOptionPane.showMessageDialog(null, e);
                }
            }else{
                 try{
                    String sql2 = "SELECT `ResidentID`, `fname`, `mname`, `lname`, `dob`, `gender`, `registeredvoter` FROM `residents` WHERE `fname`=? and `archive`='Yes' or `mname`=? and `archive`='Yes' or `lname`=? and `archive`='Yes'";
                    pst=conn.prepareStatement(sql2);
                    pst.setString(1,txtSearch.getText());
                    pst.setString(2,txtSearch.getText());
                    pst.setString(3,txtSearch.getText());
                    rs=pst.executeQuery();
                    tblResidents.setModel(DbUtils.resultSetToTableModel(rs));
                    cols = new String[]{"Resident ID","First Name","Middle Name","Last Name","Date of Birth","Gender","Voter"};
                    DefaultTableModel model = (DefaultTableModel) tblResidents.getModel();
                    model.setColumnIdentifiers(cols);
                }catch(Exception e){
                    JOptionPane.showMessageDialog(null, e);
                }
            }
        }
    }//GEN-LAST:event_rcmdByNameActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ResidentArchives.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ResidentArchives.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ResidentArchives.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ResidentArchives.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ResidentArchives().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cmdRestoreArchive;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JLabel lblBack;
    private javax.swing.JLabel lblBackHover;
    private javax.swing.JLabel lblDate;
    public static javax.swing.JLabel lblLoginAs;
    public static javax.swing.JLabel lblLoginAs1;
    private javax.swing.JLabel lblSearch;
    public static javax.swing.JLabel lblSelectedRowResidentID;
    private javax.swing.JLabel lblTime;
    private javax.swing.JLabel lblTotal;
    private javax.swing.JLabel lblTotalResult;
    public static javax.swing.JLabel lblUserID;
    public static javax.swing.JLabel lblUserType;
    public static javax.swing.JLabel lblUsername;
    private javax.swing.JRadioButton rcmdByID;
    private javax.swing.JRadioButton rcmdByName;
    private javax.swing.JTable tblAddress;
    private javax.swing.JTable tblFather;
    private javax.swing.JTable tblMother;
    private javax.swing.JTable tblResidents;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
}
