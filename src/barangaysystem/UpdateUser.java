/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package barangaysystem;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.Timer;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Admin
 */
public final class UpdateUser extends javax.swing.JFrame {
        Connection conn=null;
        PreparedStatement pst=null;
        ResultSet rs=null;
        String wImage = "";
        String s;
        String getUserTpe = "";
    /**
     * Creates new form Main
     */
    public UpdateUser() {
        initComponents();
        txtUserCheck.setVisible(false);
        lblSelectedRowUserID.setVisible(false);
        lblSelectedRowUsername.setVisible(false);
        lblUsername.setVisible(false);
        lblUserID.setVisible(false);
        lblUserType.setVisible(false);
        cmdUpdate.setVisible(false); //no Function 
        showDate();
        showTime();
    }

    void showDate() {
        Date d = new Date();
        SimpleDateFormat s = new SimpleDateFormat("MM/dd/yyyy");
        lblDate.setText("Date: " + s.format(d));
    }

    void showTime() {
        new Timer(0, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
            Date d = new Date();
        SimpleDateFormat s = new SimpleDateFormat("hh:mm:ss a");
        lblTime.setText("Time: " + s.format(d));
            }
            
        }
        ).start();
    }
    
    void report(){
        Connection con=null;
        con=SqlConnectReports.ConnectDB();
        String report = "INSERT INTO `audittrail`(`Date`, `Time`, `User Name`, `Action Performed`, `User ID`, `AuditTrailType`) VALUES (?,?,?,?,?,?)";
            Date d = new Date();        
            SimpleDateFormat s = new SimpleDateFormat("yyyy-MM-dd");
            SimpleDateFormat c = new SimpleDateFormat("hh:mm:ss");
            String date = (s.format(d));
            String time = (c.format(d));
    try{
            pst=con.prepareStatement(report);
            pst.setString(1, date);
            pst.setString(2, time);
            pst.setString(3, lblLoginAs.getText());
            pst.setString(4, "UPDATE");
            pst.setString(5, lblSelectedRowUserID.getText());
            pst.setString(6, "User");
            pst.executeUpdate();
    }catch(Exception e){
    JOptionPane.showMessageDialog(null, e);
    }
    }
    
     
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        cmdUpdateImageSelect = new javax.swing.JButton();
        lblBack = new javax.swing.JLabel();
        lblBackHover = new javax.swing.JLabel();
        lblDate = new javax.swing.JLabel();
        lblTime = new javax.swing.JLabel();
        cmdSelectImage = new javax.swing.JButton();
        cmdUpdate = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtAbout = new javax.swing.JTextArea();
        lblImage = new javax.swing.JLabel();
        lblUserID = new javax.swing.JLabel();
        lblUserType = new javax.swing.JLabel();
        lblDisplayUserID = new javax.swing.JLabel();
        lblUsername = new javax.swing.JLabel();
        lblSelectedRowUserID = new javax.swing.JLabel();
        lblSelectedRowUsername = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        lblRfname = new javax.swing.JLabel();
        txtUfname = new javax.swing.JTextField();
        lblRequired = new javax.swing.JLabel();
        lblRequired9 = new javax.swing.JLabel();
        txtUmname = new javax.swing.JTextField();
        lblRmname = new javax.swing.JLabel();
        lblRlname = new javax.swing.JLabel();
        txtUlname = new javax.swing.JTextField();
        lblRequired1 = new javax.swing.JLabel();
        lblDOB = new javax.swing.JLabel();
        lblDOBpattern = new javax.swing.JLabel();
        cboGender = new javax.swing.JComboBox<>();
        lblGender = new javax.swing.JLabel();
        lblContactNumber = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        lblAddressBlock = new javax.swing.JLabel();
        lblAddressLot = new javax.swing.JLabel();
        txtAddressLot = new javax.swing.JTextField();
        txtAddressBlock = new javax.swing.JTextField();
        lblRequired8 = new javax.swing.JLabel();
        lblRequired6 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        txtContactNumber = new javax.swing.JTextField();
        lblRequired2 = new javax.swing.JLabel();
        lblEmail = new javax.swing.JLabel();
        txtDOB = new com.toedter.calendar.JDateChooser();
        lblRequired3 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        lblDisplayUsername = new javax.swing.JLabel();
        txtUsername = new javax.swing.JTextField();
        lblRequired7 = new javax.swing.JLabel();
        lblRequired5 = new javax.swing.JLabel();
        txtPassword = new javax.swing.JPasswordField();
        lblPassword = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        lblRepeatPassword = new javax.swing.JLabel();
        txtRepeatPassword = new javax.swing.JPasswordField();
        lblRequired4 = new javax.swing.JLabel();
        cboPosition = new javax.swing.JComboBox<>();
        lblPosition = new javax.swing.JLabel();
        lblDisplayUserType = new javax.swing.JLabel();
        cboUserType = new javax.swing.JComboBox<>();
        cboUserStatus = new javax.swing.JComboBox<>();
        lblUserStatus = new javax.swing.JLabel();
        lblLoginAs1 = new javax.swing.JLabel();
        lblLoginAs = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txtUserCheck = new javax.swing.JTextField();
        jPanel8 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Barangay Records System: Update Profile");
        setMaximumSize(new java.awt.Dimension(860, 500));
        setResizable(false);

        jPanel1.setLayout(null);

        cmdUpdateImageSelect.setBackground(new java.awt.Color(0, 102, 255));
        cmdUpdateImageSelect.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        cmdUpdateImageSelect.setText("Update");
        cmdUpdateImageSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdUpdateImageSelectActionPerformed(evt);
            }
        });
        jPanel1.add(cmdUpdateImageSelect);
        cmdUpdateImageSelect.setBounds(630, 430, 190, 40);

        lblBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/barangaysystem/image/BackButtonSmall.png"))); // NOI18N
        lblBack.setToolTipText("Back to Main Menu");
        lblBack.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblBackMouseEntered(evt);
            }
        });
        jPanel1.add(lblBack);
        lblBack.setBounds(20, 0, 50, 50);

        lblBackHover.setIcon(new javax.swing.ImageIcon(getClass().getResource("/barangaysystem/image/BackButtonHoverSmall.png"))); // NOI18N
        lblBackHover.setToolTipText("Back");
        lblBackHover.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblBackHoverMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblBackHoverMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblBackHoverMouseExited(evt);
            }
        });
        jPanel1.add(lblBackHover);
        lblBackHover.setBounds(20, 0, 50, 50);

        lblDate.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblDate.setForeground(new java.awt.Color(255, 255, 255));
        lblDate.setText("Date");
        jPanel1.add(lblDate);
        lblDate.setBounds(560, 30, 130, 20);

        lblTime.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblTime.setForeground(new java.awt.Color(255, 255, 255));
        lblTime.setText("Time");
        jPanel1.add(lblTime);
        lblTime.setBounds(710, 30, 150, 20);

        cmdSelectImage.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        cmdSelectImage.setText("SELECT IMAGE");
        cmdSelectImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdSelectImageActionPerformed(evt);
            }
        });
        jPanel1.add(cmdSelectImage);
        cmdSelectImage.setBounds(633, 370, 190, 27);

        cmdUpdate.setBackground(new java.awt.Color(51, 204, 255));
        cmdUpdate.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        cmdUpdate.setText("Update");
        cmdUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdUpdateActionPerformed(evt);
            }
        });
        jPanel1.add(cmdUpdate);
        cmdUpdate.setBounds(630, 430, 190, 40);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 165, Short.MAX_VALUE)
        );

        jPanel1.add(jPanel4);
        jPanel4.setBounds(440, 140, 0, 165);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "About", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 3, 14))); // NOI18N
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtAbout.setColumns(20);
        txtAbout.setRows(5);
        jScrollPane1.setViewportView(txtAbout);

        jPanel3.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 260, 80));

        jPanel1.add(jPanel3);
        jPanel3.setBounds(320, 360, 280, 110);

        lblImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/barangaysystem/image/UserDefaultAvatar.jpg"))); // NOI18N
        lblImage.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.add(lblImage);
        lblImage.setBounds(630, 190, 190, 170);

        lblUserID.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblUserID.setForeground(new java.awt.Color(255, 255, 255));
        lblUserID.setText("UserID");
        lblUserID.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                lblUserIDMouseMoved(evt);
            }
        });
        lblUserID.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                lblUserIDInputMethodTextChanged(evt);
            }
        });
        lblUserID.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                lblUserIDPropertyChange(evt);
            }
        });
        jPanel1.add(lblUserID);
        lblUserID.setBounds(280, 80, 60, 15);

        lblUserType.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblUserType.setForeground(new java.awt.Color(255, 255, 255));
        lblUserType.setText("UserType");
        lblUserType.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                lblUserTypePropertyChange(evt);
            }
        });
        jPanel1.add(lblUserType);
        lblUserType.setBounds(400, 80, 60, 15);

        lblDisplayUserID.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblDisplayUserID.setForeground(new java.awt.Color(255, 255, 255));
        lblDisplayUserID.setText("User ID");
        jPanel1.add(lblDisplayUserID);
        lblDisplayUserID.setBounds(20, 80, 140, 20);

        lblUsername.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblUsername.setForeground(new java.awt.Color(255, 255, 255));
        lblUsername.setText("Username");
        jPanel1.add(lblUsername);
        lblUsername.setBounds(330, 80, 70, 15);

        lblSelectedRowUserID.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblSelectedRowUserID.setForeground(new java.awt.Color(255, 255, 255));
        lblSelectedRowUserID.setText("SelectedUseriD");
        lblSelectedRowUserID.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                lblSelectedRowUserIDPropertyChange(evt);
            }
        });
        jPanel1.add(lblSelectedRowUserID);
        lblSelectedRowUserID.setBounds(120, 70, 93, 20);

        lblSelectedRowUsername.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblSelectedRowUsername.setForeground(new java.awt.Color(255, 255, 255));
        lblSelectedRowUsername.setText("SelectedUsername");
        jPanel1.add(lblSelectedRowUsername);
        lblSelectedRowUsername.setBounds(120, 90, 112, 15);

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setLayout(null);

        lblRfname.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblRfname.setText("First Name:");
        jPanel5.add(lblRfname);
        lblRfname.setBounds(17, 20, 70, 15);

        txtUfname.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jPanel5.add(txtUfname);
        txtUfname.setBounds(100, 10, 170, 30);

        lblRequired.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblRequired.setText("*");
        jPanel5.add(lblRequired);
        lblRequired.setBounds(270, 10, 9, 17);

        lblRequired9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblRequired9.setText("*");
        jPanel5.add(lblRequired9);
        lblRequired9.setBounds(270, 40, 9, 17);

        txtUmname.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jPanel5.add(txtUmname);
        txtUmname.setBounds(100, 40, 170, 30);

        lblRmname.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblRmname.setText("Middle Name:");
        jPanel5.add(lblRmname);
        lblRmname.setBounds(10, 50, 90, 15);

        lblRlname.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblRlname.setText("Last Name:");
        jPanel5.add(lblRlname);
        lblRlname.setBounds(20, 80, 67, 15);

        txtUlname.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jPanel5.add(txtUlname);
        txtUlname.setBounds(100, 70, 170, 30);

        lblRequired1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblRequired1.setText("*");
        jPanel5.add(lblRequired1);
        lblRequired1.setBounds(270, 70, 9, 17);

        lblDOB.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblDOB.setText("Date of Birth:");
        jPanel5.add(lblDOB);
        lblDOB.setBounds(0, 120, 80, 15);

        lblDOBpattern.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblDOBpattern.setForeground(new java.awt.Color(102, 102, 102));
        lblDOBpattern.setText("(YYYY-MM-DD)");
        jPanel5.add(lblDOBpattern);
        lblDOBpattern.setBounds(100, 140, 83, 14);

        cboGender.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        cboGender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female" }));
        jPanel5.add(cboGender);
        cboGender.setBounds(100, 170, 76, 30);

        lblGender.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblGender.setText("Gender:");
        jPanel5.add(lblGender);
        lblGender.setBounds(40, 180, 47, 15);

        lblContactNumber.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblContactNumber.setText("Contact # :");
        jPanel5.add(lblContactNumber);
        lblContactNumber.setBounds(20, 220, 66, 15);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Address", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 3, 14))); // NOI18N
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblAddressBlock.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblAddressBlock.setText("House #:");
        jPanel2.add(lblAddressBlock, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, -1, -1));

        lblAddressLot.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblAddressLot.setText("Street:");
        jPanel2.add(lblAddressLot, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 60, -1, -1));

        txtAddressLot.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtAddressLot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAddressLotActionPerformed(evt);
            }
        });
        jPanel2.add(txtAddressLot, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 50, 70, 30));

        txtAddressBlock.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jPanel2.add(txtAddressBlock, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 20, 70, 30));

        lblRequired8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblRequired8.setText("*");
        jPanel2.add(lblRequired8, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 20, -1, -1));

        lblRequired6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblRequired6.setText("*");
        jPanel2.add(lblRequired6, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 50, 20, -1));

        jPanel5.add(jPanel2);
        jPanel2.setBounds(10, 280, 270, 90);

        txtEmail.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jPanel5.add(txtEmail);
        txtEmail.setBounds(100, 240, 170, 30);

        txtContactNumber.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtContactNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtContactNumberActionPerformed(evt);
            }
        });
        jPanel5.add(txtContactNumber);
        txtContactNumber.setBounds(100, 210, 170, 30);

        lblRequired2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblRequired2.setText("*");
        jPanel5.add(lblRequired2);
        lblRequired2.setBounds(270, 210, 9, 17);

        lblEmail.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblEmail.setText("Email:");
        jPanel5.add(lblEmail);
        lblEmail.setBounds(45, 250, 40, 15);

        txtDOB.setDateFormatString("yyyy-MM-dd");
        jPanel5.add(txtDOB);
        txtDOB.setBounds(100, 110, 150, 30);

        lblRequired3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblRequired3.setText("*");
        jPanel5.add(lblRequired3);
        lblRequired3.setBounds(260, 110, 10, 17);

        jPanel1.add(jPanel5);
        jPanel5.setBounds(20, 110, 290, 370);

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setLayout(null);

        lblDisplayUsername.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblDisplayUsername.setText("Username:");
        jPanel6.add(lblDisplayUsername);
        lblDisplayUsername.setBounds(0, 0, 70, 30);

        txtUsername.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtUsername.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtUsernameKeyReleased(evt);
            }
        });
        jPanel6.add(txtUsername);
        txtUsername.setBounds(80, 0, 170, 30);

        lblRequired7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblRequired7.setText("*");
        jPanel6.add(lblRequired7);
        lblRequired7.setBounds(250, 0, 9, 17);

        lblRequired5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblRequired5.setText("*");
        jPanel6.add(lblRequired5);
        lblRequired5.setBounds(250, 30, 9, 17);
        jPanel6.add(txtPassword);
        txtPassword.setBounds(80, 30, 170, 30);

        lblPassword.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblPassword.setText("Password:");
        jPanel6.add(lblPassword);
        lblPassword.setBounds(0, 30, 62, 30);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Repeat");
        jPanel6.add(jLabel1);
        jLabel1.setBounds(0, 50, 42, 30);

        lblRepeatPassword.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblRepeatPassword.setText("Password:");
        jPanel6.add(lblRepeatPassword);
        lblRepeatPassword.setBounds(0, 70, 62, 20);
        jPanel6.add(txtRepeatPassword);
        txtRepeatPassword.setBounds(80, 60, 170, 30);

        lblRequired4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblRequired4.setText("*");
        jPanel6.add(lblRequired4);
        lblRequired4.setBounds(250, 60, 9, 17);

        cboPosition.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        cboPosition.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Chairman", "Kagawad", "Treasurer", "Secretary", "SK Chairman", "SK Kagawad", "SK Secretary" }));
        jPanel6.add(cboPosition);
        cboPosition.setBounds(80, 90, 140, 30);

        lblPosition.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblPosition.setText("Position:");
        jPanel6.add(lblPosition);
        lblPosition.setBounds(10, 100, 53, 15);

        lblDisplayUserType.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblDisplayUserType.setText("User Type:");
        jPanel6.add(lblDisplayUserType);
        lblDisplayUserType.setBounds(0, 130, 70, 15);

        cboUserType.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        cboUserType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Guest", "User", "Admin" }));
        jPanel6.add(cboUserType);
        cboUserType.setBounds(80, 120, 110, 30);

        cboUserStatus.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        cboUserStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Granted", "Denied" }));
        jPanel6.add(cboUserStatus);
        cboUserStatus.setBounds(80, 150, 110, 30);

        lblUserStatus.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblUserStatus.setText(" Status:");
        jPanel6.add(lblUserStatus);
        lblUserStatus.setBounds(10, 160, 60, 15);

        jPanel1.add(jPanel6);
        jPanel6.setBounds(330, 160, 260, 180);

        lblLoginAs1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblLoginAs1.setForeground(new java.awt.Color(255, 255, 255));
        lblLoginAs1.setText("Login:");
        jPanel1.add(lblLoginAs1);
        lblLoginAs1.setBounds(560, 10, 50, 20);

        lblLoginAs.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblLoginAs.setForeground(new java.awt.Color(255, 255, 255));
        lblLoginAs.setText("Name");
        jPanel1.add(lblLoginAs);
        lblLoginAs.setBounds(610, 10, 250, 20);

        jPanel7.setBackground(new java.awt.Color(0, 51, 153));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Update User");

        txtUserCheck.setEditable(false);
        txtUserCheck.setEnabled(false);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(79, 79, 79)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtUserCheck, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(552, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                    .addComponent(txtUserCheck, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel1.add(jPanel7);
        jPanel7.setBounds(0, 0, 870, 50);

        jPanel8.setBackground(new java.awt.Color(255, 140, 0));

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 810, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 40, Short.MAX_VALUE)
        );

        jPanel1.add(jPanel8);
        jPanel8.setBounds(20, 70, 810, 40);

        jPanel9.setBackground(new java.awt.Color(153, 153, 255));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Account Information");

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jLabel2)
                .addContainerGap(34, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel1.add(jPanel9);
        jPanel9.setBounds(330, 120, 260, 30);

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/barangaysystem/image/bg1.png"))); // NOI18N
        jLabel4.setText("jLabel4");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(0, 0, 860, 500);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 860, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 500, Short.MAX_VALUE)
        );

        getAccessibleContext().setAccessibleDescription("");

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void lblBackHoverMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblBackHoverMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_lblBackHoverMouseEntered

    private void lblBackMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblBackMouseEntered
        // TODO add your handling code here:
        lblBack.setVisible(false);
    }//GEN-LAST:event_lblBackMouseEntered

    private void lblBackHoverMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblBackHoverMouseExited
        // TODO add your handling code here:
        lblBack.setVisible(true);
    }//GEN-LAST:event_lblBackHoverMouseExited

    private void lblBackHoverMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblBackHoverMouseClicked
        // TODO add your handling code here:
        String LoginAs = lblLoginAs.getText();
        String UserID = lblUserID.getText();
        String Username = lblUsername.getText();
        String userType = lblUserType.getText();
        Users ob = new Users();
        ob.lblLoginAs.setText(LoginAs);
        ob.lblUserID.setText(UserID);
        ob.lblUsername.setText(Username);
        ob.lblUserType.setText(userType);
        ob.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_lblBackHoverMouseClicked

    private void txtContactNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtContactNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtContactNumberActionPerformed

    private void cmdUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdUpdateActionPerformed
        // TODO add your handling code here:
        if(txtUfname.getText().equals("") || txtUmname.getText().equals("") || txtUlname.getText().equals("") || ((JTextField)txtDOB.getDateEditor().getUiComponent()).getText().equals("") || txtContactNumber.getText().equals("") || txtAddressBlock.getText().equals("") || txtAddressLot.getText().equals("")){
        JOptionPane.showMessageDialog(null, "Please Specified the Required Fields  (  *  )","Barangay System",JOptionPane.ERROR_MESSAGE);
        }else{
                if(txtPassword.getText().equals(txtRepeatPassword.getText())){
                    if(txtUsername.getText().equals(lblSelectedRowUsername.getText())){
                        int selectedOption = JOptionPane.showConfirmDialog(null, "Are you sure?", "Barangay System",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
        if (selectedOption==JOptionPane.YES_OPTION){
             Connection conn=MySqlConnect.ConnectDB();
                    try{
             String fname = txtUfname.getText();
             String mname = txtUmname.getText();
             String lname = txtUlname.getText();
             String dob = ((JTextField)txtDOB.getDateEditor().getUiComponent()).getText();
             String gender = (String) cboGender.getSelectedItem();
             String ContactNumber = txtContactNumber.getText();
             String email = txtEmail.getText();
             String AddressBlock = txtAddressBlock.getText();
             String AddressLot = txtAddressLot.getText();
             //String username = txtUsername.getText();
             String password = txtPassword.getText();
             String position = (String) cboPosition.getSelectedItem();
             String userType = (String) cboUserType.getSelectedItem();
             String about = txtAbout.getText();
             String accountStatus = (String) cboUserStatus.getSelectedItem();
             String updateUserID = lblSelectedRowUserID.getText();
             String Sql="UPDATE `users` SET `fname`='"+fname+"',`mname`='"+mname+"',`lname`='"+lname+"',`dob`='"+dob+"',"
                +"`gender`='"+gender+"',`contactNumber`='"+ContactNumber+"',`eMail`='"+email+"',`addressBlock`='"+AddressBlock+"',"
                +"`addressLot`='"+AddressLot+"',`password`='"+password+"',`position`='"+position+"',"
                +"`userType`='"+userType+"',`about`='"+about+"',`AccountStatus`='"+accountStatus+"' WHERE UserID='"+updateUserID+"'";
            pst=conn.prepareStatement(Sql);
            pst.executeUpdate();
            report();
            lblSelectedRowUsername.setText(txtUsername.getText());
            JOptionPane.showMessageDialog(null, "Successfully Updated","Barangay System",JOptionPane.INFORMATION_MESSAGE);
        }catch(Exception e){
           JOptionPane.showMessageDialog(null, e);
            //JOptionPane.showMessageDialog(null,"Can't Connect, Please Contact your Administrator","Barangay System",JOptionPane.ERROR_MESSAGE);
        }
                    }
                    }else{
         String UserCheck = txtUsername.getText();
         String sql2 = "SELECT username FROM users where username='"+UserCheck+"'";
         Connection conn=MySqlConnect.ConnectDB();
         try{
            pst=conn.prepareStatement(sql2);
            rs = pst.executeQuery();
           while(rs.next()){
           txtUserCheck.setText(rs.getString(1));
           }
           if(txtUserCheck.getText().equals("")){
               int selectedOption = JOptionPane.showConfirmDialog(null, "Are you sure?", "Barangay System",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
        if (selectedOption==JOptionPane.YES_OPTION){
         try{
             String fname = txtUfname.getText();
             String mname = txtUmname.getText();
             String lname = txtUlname.getText();
             String dob = ((JTextField)txtDOB.getDateEditor().getUiComponent()).getText();
             String gender = (String) cboGender.getSelectedItem();
             String ContactNumber = txtContactNumber.getText();
             String email = txtEmail.getText();
             String AddressBlock = txtAddressBlock.getText();
             String AddressLot = txtAddressLot.getText();
             String username = txtUsername.getText();
             String password = txtPassword.getText();
             String position = (String) cboPosition.getSelectedItem();
             String userType = (String) cboUserType.getSelectedItem();
             String about = txtAbout.getText();
             String accountStatus = (String) cboUserStatus.getSelectedItem();
             String updateUserID = lblSelectedRowUserID.getText();
             String Sql="UPDATE `users` SET `fname`='"+fname+"',`mname`='"+mname+"',`lname`='"+lname+"',`dob`='"+dob+"',"
                +"`gender`='"+gender+"',`contactNumber`='"+ContactNumber+"',`eMail`='"+email+"',`addressBlock`='"+AddressBlock+"',"
                +"`addressLot`='"+AddressLot+"',`username`='"+username+"',`password`='"+password+"',`position`='"+position+"',"
                +"`userType`='"+userType+"',`about`='"+about+"',`AccountStatus`='"+accountStatus+"' WHERE UserID='"+updateUserID+"'";
            pst=conn.prepareStatement(Sql);
            pst.executeUpdate();
            report();
            lblSelectedRowUsername.setText(txtUsername.getText());
            JOptionPane.showMessageDialog(null, "Successfully Updated","Barangay System",JOptionPane.INFORMATION_MESSAGE);
         // new Main().setVisible(true);
        }catch(Exception e){
           JOptionPane.showMessageDialog(null, e);
            //JOptionPane.showMessageDialog(null,"Can't Connect, Please Contact your Administrator","Barangay System",JOptionPane.ERROR_MESSAGE);
        }
           }
               }else{
                JOptionPane.showMessageDialog(null, "Username Already Exist");
                txtUserCheck.setText("");
               }
                
         }catch(Exception e){
           JOptionPane.showMessageDialog(null, e);
            //JOptionPane.showMessageDialog(null,"Can't Connect, Please Contact your Administrator","Barangay System",JOptionPane.ERROR_MESSAGE);
        }
                }
        }else{
            JOptionPane.showMessageDialog(null, "Password not Match","Barangay System",JOptionPane.ERROR_MESSAGE);
            }
        
        }
    }//GEN-LAST:event_cmdUpdateActionPerformed

    private void txtAddressLotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAddressLotActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAddressLotActionPerformed

    private void cmdSelectImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdSelectImageActionPerformed
           // TODO add your handling code here:
       JFileChooser fileChooser = new JFileChooser();
        fileChooser.setCurrentDirectory(new File(System.getProperty("user.home")));
        FileNameExtensionFilter filter = new FileNameExtensionFilter("*.jpg","*.png","*.gif","*.bmp");
        fileChooser.addChoosableFileFilter(filter);
        int result=fileChooser.showSaveDialog(null);
        if(result==JFileChooser.APPROVE_OPTION){
        File selectedFile = fileChooser.getSelectedFile();
        String path = selectedFile.getAbsolutePath();
        lblImage.setIcon(ResizeImage(path));
        s = path;
        wImage = "Yes";
       // cmdUpdateImageSelect.setVisible(true);
        //cmdUpdate.setVisible(false);
        }else if(result==JFileChooser.CANCEL_OPTION){
            if(wImage.equals("")){
               wImage= "";
           }else{
            wImage = "No";
           }
       // cmdUpdate.setVisible(true);
       // cmdUpdateImageSelect.setVisible(false);
        JOptionPane.showMessageDialog(null, "Operation Cancelled","Barangay System",JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_cmdSelectImageActionPerformed

    private void lblUserIDInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_lblUserIDInputMethodTextChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_lblUserIDInputMethodTextChanged

    private void lblUserIDMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblUserIDMouseMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_lblUserIDMouseMoved

    private void lblUserIDPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_lblUserIDPropertyChange

    }//GEN-LAST:event_lblUserIDPropertyChange

    private void txtUsernameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUsernameKeyReleased

    }//GEN-LAST:event_txtUsernameKeyReleased

    private void lblUserTypePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_lblUserTypePropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_lblUserTypePropertyChange

    private void cmdUpdateImageSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdUpdateImageSelectActionPerformed
        // TODO add your handling code here:
if(txtUfname.getText().equals("") || txtUmname.getText().equals("") || txtUlname.getText().equals("") || ((JTextField)txtDOB.getDateEditor().getUiComponent()).getText().equals("") || txtContactNumber.getText().equals("") || txtAddressBlock.getText().equals("") || txtAddressLot.getText().equals("")){
        JOptionPane.showMessageDialog(null, "Please Specified the Required Fields  (  *  )","Barangay System",JOptionPane.ERROR_MESSAGE);
        }else{
                if(txtPassword.getText().equals(txtRepeatPassword.getText())){
                    if(txtUsername.getText().equals(lblSelectedRowUsername.getText())){
                        int selectedOption = JOptionPane.showConfirmDialog(null, "Are you sure?", "Barangay System",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
        if (selectedOption==JOptionPane.YES_OPTION){
             Connection conn=MySqlConnect.ConnectDB();
                    try{
            // InputStream is = new FileInputStream(new File(s));
             String fname = txtUfname.getText();
             String mname = txtUmname.getText();
             String lname = txtUlname.getText();
             String dob = ((JTextField)txtDOB.getDateEditor().getUiComponent()).getText();
             String gender = (String) cboGender.getSelectedItem();
             String ContactNumber = txtContactNumber.getText();
             String email = txtEmail.getText();
             String AddressBlock = txtAddressBlock.getText();
             String AddressLot = txtAddressLot.getText();
             //String username = txtUsername.getText();
             String password = txtPassword.getText();
             String position = (String) cboPosition.getSelectedItem();
             String userType = (String) cboUserType.getSelectedItem();
             String about = txtAbout.getText();
             String accountStatus = (String) cboUserStatus.getSelectedItem();
             String updateUserID = lblSelectedRowUserID.getText();
             String Sql="UPDATE `users` SET `fname`='"+fname+"',`mname`='"+mname+"',`lname`='"+lname+"',`dob`='"+dob+"',"
                +"`gender`='"+gender+"',`contactNumber`='"+ContactNumber+"',`eMail`='"+email+"',`addressBlock`='"+AddressBlock+"',"
                +"`addressLot`='"+AddressLot+"',`password`='"+password+"',`position`='"+position+"',"
                +"`userType`='"+userType+"',`about`='"+about+"',`AccountStatus`='"+accountStatus+"' WHERE UserID='"+updateUserID+"'";
            pst=conn.prepareStatement(Sql);
           // pst.setBlob(1,is);
            pst.executeUpdate();
            if (wImage.equals("No")) {
         String noImage="UPDATE `users` SET `image`=? WHERE UserID='"+updateUserID+"'";
          pst = conn.prepareStatement(noImage);
          pst.setString(1, "");
          pst.executeUpdate();
      } else if (wImage.equals("Yes")) {
          String withImage="UPDATE `users` SET `image`=? WHERE UserID='"+updateUserID+"'";
          pst = conn.prepareStatement(withImage);
          InputStream is = new FileInputStream(new File(s));
          pst.setBlob(1, is);
          pst.executeUpdate();
      }
            report();
            lblSelectedRowUsername.setText(txtUsername.getText());
            JOptionPane.showMessageDialog(null, "Successfully Updated","Barangay System",JOptionPane.INFORMATION_MESSAGE);
        }catch(Exception e){
           JOptionPane.showMessageDialog(null, e);
            //JOptionPane.showMessageDialog(null,"Can't Connect, Please Contact your Administrator","Barangay System",JOptionPane.ERROR_MESSAGE);
        }
                    }
                    }
                    
                    
                    
                    //BREAK BREAK BREAK <3
                    
                    
                    else{
         String UserCheck = txtUsername.getText();
         String sql2 = "SELECT username FROM users where username='"+UserCheck+"'";
         Connection conn=MySqlConnect.ConnectDB();
         try{
            pst=conn.prepareStatement(sql2);
            rs = pst.executeQuery();
           while(rs.next()){
           txtUserCheck.setText(rs.getString(1));
           }
           if(txtUserCheck.getText().equals("")){
               int selectedOption = JOptionPane.showConfirmDialog(null, "Are you sure?", "Barangay System",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
        if (selectedOption==JOptionPane.YES_OPTION){
         try{
             InputStream is = new FileInputStream(new File(s));
             String fname = txtUfname.getText();
             String mname = txtUmname.getText();
             String lname = txtUlname.getText();
             String dob = ((JTextField)txtDOB.getDateEditor().getUiComponent()).getText();
             String gender = (String) cboGender.getSelectedItem();
             String ContactNumber = txtContactNumber.getText();
             String email = txtEmail.getText();
             String AddressBlock = txtAddressBlock.getText();
             String AddressLot = txtAddressLot.getText();
             String username = txtUsername.getText();
             String password = txtPassword.getText();
             String position = (String) cboPosition.getSelectedItem();
             String userType = (String) cboUserType.getSelectedItem();
             String about = txtAbout.getText();
             String accountStatus = (String) cboUserStatus.getSelectedItem();
             String updateUserID = lblSelectedRowUserID.getText();
             String Sql="UPDATE `users` SET `fname`='"+fname+"',`mname`='"+mname+"',`lname`='"+lname+"',`dob`='"+dob+"',"
                +"`gender`='"+gender+"',`contactNumber`='"+ContactNumber+"',`eMail`='"+email+"',`addressBlock`='"+AddressBlock+"',"
                +"`addressLot`='"+AddressLot+"',`username`='"+username+"',`password`='"+password+"',`position`='"+position+"',"
                +"`userType`='"+userType+"',`about`='"+about+"',`AccountStatus`='"+accountStatus+"',image=? WHERE UserID='"+updateUserID+"'";
            pst=conn.prepareStatement(Sql);
            pst.setBlob(1,is);
            pst.executeUpdate();
            report();
            lblSelectedRowUsername.setText(txtUsername.getText());
            JOptionPane.showMessageDialog(null, "Successfully Updated","Barangay System",JOptionPane.INFORMATION_MESSAGE);
         // new Main().setVisible(true);
        }catch(Exception e){
           JOptionPane.showMessageDialog(null, e);
            //JOptionPane.showMessageDialog(null,"Can't Connect, Please Contact your Administrator","Barangay System",JOptionPane.ERROR_MESSAGE);
        }
           }
               }else{
                JOptionPane.showMessageDialog(null, "Username Already Exist");
                txtUserCheck.setText("");
               }
                
         }catch(Exception e){
           JOptionPane.showMessageDialog(null, e);
            //JOptionPane.showMessageDialog(null,"Can't Connect, Please Contact your Administrator","Barangay System",JOptionPane.ERROR_MESSAGE);
        }
                }
        }else{
            JOptionPane.showMessageDialog(null, "Password not Match","Barangay System",JOptionPane.ERROR_MESSAGE);
            }
        
        }
    }//GEN-LAST:event_cmdUpdateImageSelectActionPerformed

    private void lblSelectedRowUserIDPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_lblSelectedRowUserIDPropertyChange
        // TODO add your handling code here:
        String sql = "SELECT * FROM `users` WHERE UserID=? ";
        Connection conn=MySqlConnect.ConnectDB();
        try {
            pst = conn.prepareStatement(sql);
            pst.setString(1, lblSelectedRowUserID.getText());
            rs = pst.executeQuery();
            while (rs.next()) {
                String UserID = rs.getString("UserID");
                lblDisplayUserID.setText("USER ID: " + UserID);
                String fname = rs.getString("fname");
                txtUfname.setText(fname);
                String mname = rs.getString("mname");
                txtUmname.setText(mname);
                String lname = rs.getString("lname");
                txtUlname.setText(lname);
                Date dob = rs.getDate("dob");
                txtDOB.setDate(dob);
                String gender = rs.getString("gender");
                cboGender.setSelectedItem(gender);
                String contactNumber = rs.getString("contactNumber");
                txtContactNumber.setText(contactNumber);
                String eMail = rs.getString("eMail");
                txtEmail.setText(eMail);
                String addressBlock = rs.getString("addressBlock");
                txtAddressBlock.setText(addressBlock);
                String addressLot = rs.getString("addressLot");
                txtAddressLot.setText(addressLot);
                String username = rs.getString("username");
                txtUsername.setText(username);
                String password = rs.getString("password");
                txtPassword.setText(password);
                txtRepeatPassword.setText(password);
                String position = rs.getString("position");
                cboPosition.setSelectedItem(position);
                String userType = rs.getString("userType");
                cboUserType.setSelectedItem(userType);
                getUserTpe = userType;
                String about = rs.getString("about");
                txtAbout.setText(about);
                String accountStatus = rs.getString("AccountStatus");
                cboUserStatus.setSelectedItem(accountStatus);
                byte[] img = rs.getBytes("image");
                ImageIcon imageIcon = new ImageIcon(new ImageIcon(img).getImage().getScaledInstance(lblImage.getWidth(), lblImage.getHeight(), Image.SCALE_SMOOTH));
                lblImage.setIcon(imageIcon);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_lblSelectedRowUserIDPropertyChange

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UpdateUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UpdateUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UpdateUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UpdateUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UpdateUser().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JComboBox<String> cboGender;
    private javax.swing.JComboBox<String> cboPosition;
    private javax.swing.JComboBox<String> cboUserStatus;
    private javax.swing.JComboBox<String> cboUserType;
    private javax.swing.JButton cmdSelectImage;
    private javax.swing.JButton cmdUpdate;
    private javax.swing.JButton cmdUpdateImageSelect;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAddressBlock;
    private javax.swing.JLabel lblAddressLot;
    public static javax.swing.JLabel lblBack;
    public static javax.swing.JLabel lblBackHover;
    private javax.swing.JLabel lblContactNumber;
    private javax.swing.JLabel lblDOB;
    private javax.swing.JLabel lblDOBpattern;
    public static javax.swing.JLabel lblDate;
    public static javax.swing.JLabel lblDisplayUserID;
    private javax.swing.JLabel lblDisplayUserType;
    private javax.swing.JLabel lblDisplayUsername;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblGender;
    private javax.swing.JLabel lblImage;
    public static javax.swing.JLabel lblLoginAs;
    public static javax.swing.JLabel lblLoginAs1;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblPosition;
    private javax.swing.JLabel lblRepeatPassword;
    private javax.swing.JLabel lblRequired;
    private javax.swing.JLabel lblRequired1;
    private javax.swing.JLabel lblRequired2;
    private javax.swing.JLabel lblRequired3;
    private javax.swing.JLabel lblRequired4;
    private javax.swing.JLabel lblRequired5;
    private javax.swing.JLabel lblRequired6;
    private javax.swing.JLabel lblRequired7;
    private javax.swing.JLabel lblRequired8;
    private javax.swing.JLabel lblRequired9;
    private javax.swing.JLabel lblRfname;
    private javax.swing.JLabel lblRlname;
    private javax.swing.JLabel lblRmname;
    public static javax.swing.JLabel lblSelectedRowUserID;
    public static javax.swing.JLabel lblSelectedRowUsername;
    public static javax.swing.JLabel lblTime;
    public static javax.swing.JLabel lblUserID;
    private javax.swing.JLabel lblUserStatus;
    public static javax.swing.JLabel lblUserType;
    public static javax.swing.JLabel lblUsername;
    private javax.swing.JTextArea txtAbout;
    private javax.swing.JTextField txtAddressBlock;
    private javax.swing.JTextField txtAddressLot;
    private javax.swing.JTextField txtContactNumber;
    private com.toedter.calendar.JDateChooser txtDOB;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JPasswordField txtRepeatPassword;
    public static javax.swing.JTextField txtUfname;
    public static javax.swing.JTextField txtUlname;
    public static javax.swing.JTextField txtUmname;
    private javax.swing.JTextField txtUserCheck;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables
        public ImageIcon ResizeImage(String imgPath){
        ImageIcon MyImage = new ImageIcon(imgPath);
        Image img = MyImage.getImage();
        Image newImage = img.getScaledInstance(lblImage.getWidth(), lblImage.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon image = new ImageIcon(newImage);
        return image;
        }
}
